name: Frontend CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: SetupNode.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install dependencies
        run:
          npm ci
        working-directory: starter/frontend

      - name: Run ESLint and auto-fix
        run: npx eslint . --fix
        working-directory: starter/frontend

      - name: Run lint
        run: npm run lint
        working-directory: starter/frontend
        
     

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install dependencies (fallback)
        run:
          npm ci
        working-directory: starter/frontend

      - name: Run test
        run: npm run test -- --transformIgnorePatterns --passWithNoTests
        working-directory: starter/frontend

      

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: SetupNode.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install dependencies (fallback)
        run:
          npm ci
        working-directory: starter/frontend

      - name: Build and Run Docker Image
        run: |
         cd starter/frontend
         docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5001 --tag=mp-frontend:latest .
         docker run --name mp-frontend -p 3000:3000 -d mp-frontend
